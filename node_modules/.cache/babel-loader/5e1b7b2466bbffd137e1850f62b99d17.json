{"ast":null,"code":"import * as firebase from 'firebase';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMCDK3Jh_ZOyS3OP8u-BZfmOj2ZjfuZGE\",\n  authDomain: \"food-delivery-bc3ad.firebaseapp.com\",\n  projectId: \"food-delivery-bc3ad\",\n  storageBucket: \"food-delivery-bc3ad.appspot.com\",\n  messagingSenderId: \"554604116256\",\n  appId: \"1:554604116256:web:6d80972bacb023e3663f45\",\n  measurementId: \"G-JXG82NFG5G\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconsole.log(\"DB connected 1\");\n\nfunction signUp(userDetails) {\n  return new Promise((resolve, reject) => {\n    const {\n      userName,\n      userEmail,\n      userPassword,\n      userCity,\n      userCountry,\n      userGender,\n      userAge,\n      userProfileImage,\n      isRestaurant,\n      typeOfFood\n    } = userDetails;\n    firebase.auth().createUserWithEmailAndPassword(userDetails.userEmail, userDetails.userPassword).then(success => {\n      console.log(\"DB connected 2\");\n      let user = firebase.auth().currentUser;\n      var uid;\n\n      if (user != null) {\n        uid = user.uid;\n      }\n\n      ;\n      firebase.storage().ref().child(`userProfileImage/${uid}/` + userProfileImage.name).put(userProfileImage).then(url => {\n        url.ref.getDownloadURL().then(success => {\n          const userProfileImageUrl = success;\n          console.log(userProfileImageUrl);\n          const userDetailsForDb = {\n            userName: userName,\n            userEmail: userEmail,\n            userPassword: userPassword,\n            userCity: userCity,\n            userCountry: userCountry,\n            userGender: userGender,\n            userAge: userAge,\n            userUid: uid,\n            isRestaurant: isRestaurant,\n            userProfileImageUrl: userProfileImageUrl,\n            typeOfFood: typeOfFood\n          };\n          db.collection(\"profile_photo\").doc(uid).set(userDetailsForDb).then(docRef => {\n            // console.log(\"Document written with ID: \", docRef.id);\n            if (userDetailsForDb.isRestaurant) {\n              userDetails.propsHistory.push(\"/order-requests\");\n              resolve(userDetailsForDb);\n            } else {\n              userDetails.propsHistory.push(\"/\");\n              resolve(userDetailsForDb);\n            }\n          }).catch(function (error) {\n            console.error(\"Error adding document: \", error);\n            reject(error);\n          });\n        }).catch(error => {\n          // Handle Errors here.\n          let errorCode = error.code;\n          let errorMessage = error.message;\n          console.log(\"Error in getDownloadURL function\", errorMessage);\n          reject(errorMessage);\n        });\n      }).catch(error => {\n        // Handle Errors here.\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        console.log(\"Error in Image Uploading\", errorMessage);\n        reject(errorMessage);\n      });\n    }).catch(error => {\n      var errorMessage = error.message;\n      console.log(\"Error in Authentication\", errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction logIn(userLoginDetails) {\n  return new Promise((resolve, reject) => {\n    const {\n      userLoginEmail,\n      userLoginPassword\n    } = userLoginDetails;\n    firebase.auth().signInWithEmailAndPassword(userLoginEmail, userLoginPassword).then(success => {\n      db.collection('profile_photo').doc(success.user.uid).get().then(snapshot => {\n        console.log(\"snapshot.data =>>\", snapshot.data().isRestaurant);\n\n        if (snapshot.data().isRestaurant) {\n          userLoginDetails.propsHistory.push(\"/order-requests\");\n          resolve(success);\n        } else {\n          userLoginDetails.propsHistory.push(\"/\");\n          resolve(success);\n        }\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      // var errorCode = error.code;\n      var errorMessage = error.message;\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction addItem(itemDetails) {\n  const {\n    itemTitle,\n    itemIngredients,\n    itemPrice,\n    itemImage,\n    chooseItemType\n  } = itemDetails;\n  return new Promise((resolve, reject) => {\n    let user = firebase.auth().currentUser;\n    var uid;\n\n    if (user != null) {\n      uid = user.uid;\n    }\n\n    ;\n    firebase.storage().ref().child(`itemImage/${uid}/` + itemImage.name).put(itemImage).then(url => {\n      url.ref.getDownloadURL().then(success => {\n        const itemImageUrl = success;\n        console.log(itemImageUrl);\n        const itemDetailsForDb = {\n          itemTitle: itemTitle,\n          itemIngredients: itemIngredients,\n          itemPrice: itemPrice,\n          itemImageUrl: itemImageUrl,\n          chooseItemType: chooseItemType // userUid: uid,\n\n        };\n        db.collection(\"profile_photo\").doc(uid).collection(\"menuItems\").add(itemDetailsForDb).then(docRef => {\n          // console.log(\"Document written with ID: \", docRef.id);\n          // itemDetails.propsHistory.push(\"/my-foods\");\n          resolve(\"Successfully added food item\");\n        }).catch(function (error) {\n          let errorCode = error.code;\n          let errorMessage = error.message;\n          reject(errorMessage); // console.error(\"Error adding document: \", error);\n        });\n      }).catch(error => {\n        // Handle Errors here.\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        console.log(\"Error in getDownloadURL function\", errorCode);\n        console.log(\"Error in getDownloadURL function\", errorMessage);\n        reject(errorMessage);\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      let errorCode = error.code;\n      let errorMessage = error.message;\n      console.log(\"Error in Image Uploading\", errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction orderNow(cartItemsList, totalPrice, resDetails, userDetails, history) {\n  return new Promise((resolve, reject) => {\n    let user = firebase.auth().currentUser;\n    var uid;\n\n    if (user != null) {\n      uid = user.uid;\n    }\n\n    ;\n    const myOrder = {\n      itemsList: cartItemsList,\n      totalPrice: totalPrice,\n      status: \"PENDING\",\n      ...resDetails\n    };\n    const orderRequest = {\n      itemsList: cartItemsList,\n      totalPrice: totalPrice,\n      status: \"PENDING\",\n      ...userDetails\n    }; // console.log(\"myOrder => \", myOrder)\n    // console.log(\"orderRequest => \", orderRequest)\n\n    db.collection(\"profile_photo\").doc(uid).collection(\"myOrder\").add(myOrder).then(docRef => {\n      // console.log(docRef.id)\n      db.collection(\"profile_photo\").doc(resDetails.id).collection(\"orderRequest\").doc(docRef.id).set(orderRequest).then(docRef => {\n        // console.log(\"Document written with ID: \", docRef.id);\n        resolve('Successfully ordered'); // history.push(\"/my-orders\");\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error.message);\n        reject(error.message);\n      });\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error.message);\n      reject(error.message);\n    });\n  });\n}\n\nexport default firebase;\nexport { signUp, logIn, addItem, orderNow };","map":{"version":3,"sources":["/home/ashish/Desktop/resume_project/Food-delivery/src/config/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","db","firestore","console","log","signUp","userDetails","Promise","resolve","reject","userName","userEmail","userPassword","userCity","userCountry","userGender","userAge","userProfileImage","isRestaurant","typeOfFood","auth","createUserWithEmailAndPassword","then","success","user","currentUser","uid","storage","ref","child","name","put","url","getDownloadURL","userProfileImageUrl","userDetailsForDb","userUid","collection","doc","set","docRef","propsHistory","push","catch","error","errorCode","code","errorMessage","message","logIn","userLoginDetails","userLoginEmail","userLoginPassword","signInWithEmailAndPassword","get","snapshot","data","addItem","itemDetails","itemTitle","itemIngredients","itemPrice","itemImage","chooseItemType","itemImageUrl","itemDetailsForDb","add","orderNow","cartItemsList","totalPrice","resDetails","history","myOrder","itemsList","status","orderRequest","id"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMCDK3Jh_ZOyS3OP8u-BZfmOj2ZjfuZGE\",\n    authDomain: \"food-delivery-bc3ad.firebaseapp.com\",\n    projectId: \"food-delivery-bc3ad\",\n    storageBucket: \"food-delivery-bc3ad.appspot.com\",\n    messagingSenderId: \"554604116256\",\n    appId: \"1:554604116256:web:6d80972bacb023e3663f45\",\n    measurementId: \"G-JXG82NFG5G\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconsole.log(\"DB connected 1\");\nfunction signUp(userDetails) {\n    return new Promise((resolve, reject) => {\n        const { userName, userEmail, userPassword, userCity, userCountry, userGender, userAge, userProfileImage, isRestaurant, typeOfFood } = userDetails;\n        firebase.auth().createUserWithEmailAndPassword(userDetails.userEmail, userDetails.userPassword).then((success) => {\n            console.log(\"DB connected 2\");\n            let user = firebase.auth().currentUser;\n            var uid;\n            if (user != null) {\n                uid = user.uid;\n            };\n            firebase.storage().ref().child(`userProfileImage/${uid}/` + userProfileImage.name).put(userProfileImage).then((url) => {\n                url.ref.getDownloadURL().then((success) => {\n                    const userProfileImageUrl = success\n                    console.log(userProfileImageUrl)\n                    const userDetailsForDb = {\n                        userName: userName,\n                        userEmail: userEmail,\n                        userPassword: userPassword,\n                        userCity: userCity,\n                        userCountry: userCountry,\n                        userGender: userGender,\n                        userAge: userAge,\n                        userUid: uid,\n                        isRestaurant: isRestaurant,\n                        userProfileImageUrl: userProfileImageUrl,\n                        typeOfFood: typeOfFood,\n                    }\n                    db.collection(\"profile_photo\").doc(uid).set(userDetailsForDb).then((docRef) => {\n                        // console.log(\"Document written with ID: \", docRef.id);\n                        if(userDetailsForDb.isRestaurant){\n                            userDetails.propsHistory.push(\"/order-requests\");\n                            resolve(userDetailsForDb)\n                        }else{\n                            userDetails.propsHistory.push(\"/\");\n                            resolve(userDetailsForDb)\n                        }\n                    }).catch(function (error) {\n                        console.error(\"Error adding document: \", error);\n                        reject(error)\n                    })\n                }).catch((error) => {\n                    // Handle Errors here.\n                    let errorCode = error.code;\n                    let errorMessage = error.message;\n                    console.log(\"Error in getDownloadURL function\", errorMessage);\n                    reject(errorMessage)\n                })\n            }).catch((error) => {\n                // Handle Errors here.\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.log(\"Error in Image Uploading\", errorMessage);\n                reject(errorMessage)\n            })\n        }).catch((error) => {\n            var errorMessage = error.message;\n            console.log(\"Error in Authentication\", errorMessage);\n            reject(errorMessage)\n        })\n    })\n}\n\nfunction logIn(userLoginDetails) {\n    return new Promise((resolve, reject) => {\n        const { userLoginEmail, userLoginPassword } = userLoginDetails;\n        firebase.auth().signInWithEmailAndPassword(userLoginEmail, userLoginPassword).then((success) => {\n            db.collection('profile_photo').doc(success.user.uid).get().then((snapshot) => {\n                console.log(\"snapshot.data =>>\", snapshot.data().isRestaurant);\n                if(snapshot.data().isRestaurant){\n                    userLoginDetails.propsHistory.push(\"/order-requests\");\n                    resolve(success)\n                }else{\n                    userLoginDetails.propsHistory.push(\"/\");\n                    resolve(success)\n                }             \n            })\n        }).catch((error) => {\n            // Handle Errors here.\n            // var errorCode = error.code;\n            var errorMessage = error.message;\n            reject(errorMessage)\n        });\n\n    })\n}\n\nfunction addItem(itemDetails) {\n    const { itemTitle, itemIngredients, itemPrice, itemImage, chooseItemType, } = itemDetails;\n    return new Promise((resolve, reject) => {\n        let user = firebase.auth().currentUser;\n        var uid;\n        if (user != null) {\n            uid = user.uid;\n        };\n        firebase.storage().ref().child(`itemImage/${uid}/` + itemImage.name).put(itemImage).then((url) => {\n            url.ref.getDownloadURL().then((success) => {\n                const itemImageUrl = success\n                console.log(itemImageUrl)\n                const itemDetailsForDb = {\n                    itemTitle: itemTitle,\n                    itemIngredients: itemIngredients,\n                    itemPrice: itemPrice,\n                    itemImageUrl: itemImageUrl,\n                    chooseItemType: chooseItemType,\n                    // userUid: uid,\n                }\n                db.collection(\"profile_photo\").doc(uid).collection(\"menuItems\").add(itemDetailsForDb).then((docRef) => {\n                    // console.log(\"Document written with ID: \", docRef.id);\n                    // itemDetails.propsHistory.push(\"/my-foods\");\n                    resolve(\"Successfully added food item\")\n                }).catch(function (error) {\n                    let errorCode = error.code;\n                    let errorMessage = error.message;\n                    reject(errorMessage)\n                    // console.error(\"Error adding document: \", error);\n                })\n            }).catch((error) => {\n                // Handle Errors here.\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                console.log(\"Error in getDownloadURL function\", errorCode);\n                console.log(\"Error in getDownloadURL function\", errorMessage);\n                reject(errorMessage)\n            })\n        }).catch((error) => {\n            // Handle Errors here.\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(\"Error in Image Uploading\", errorMessage);\n            reject(errorMessage)\n        })\n    })\n}\n\nfunction orderNow(cartItemsList, totalPrice, resDetails, userDetails, history) {\n    return new Promise((resolve, reject) => {\n        let user = firebase.auth().currentUser;\n        var uid;\n        if (user != null) {\n            uid = user.uid;\n        };\n\n        const myOrder = {\n            itemsList: cartItemsList,\n            totalPrice: totalPrice,\n            status: \"PENDING\",\n            ...resDetails,\n        }\n\n        const orderRequest = {\n            itemsList: cartItemsList,\n            totalPrice: totalPrice,\n            status: \"PENDING\",\n            ...userDetails,\n        }\n\n        // console.log(\"myOrder => \", myOrder)\n        // console.log(\"orderRequest => \", orderRequest)\n        db.collection(\"profile_photo\").doc(uid).collection(\"myOrder\").add(myOrder).then((docRef) => {\n            // console.log(docRef.id)\n            db.collection(\"profile_photo\").doc(resDetails.id).collection(\"orderRequest\").doc(docRef.id).set(orderRequest).then((docRef) => {\n                // console.log(\"Document written with ID: \", docRef.id);\n                resolve('Successfully ordered')\n                // history.push(\"/my-orders\");\n            }).catch(function (error) {\n                console.error(\"Error adding document: \", error.message);\n                reject(error.message)\n            })\n        }).catch(function (error) {\n            console.error(\"Error adding document: \", error.message);\n            reject(error.message)\n        })\n    })\n}\n\nexport default firebase;\nexport {\n    signUp,\n    logIn,\n    addItem,\n    orderNow,\n}"]},"metadata":{},"sourceType":"module"}